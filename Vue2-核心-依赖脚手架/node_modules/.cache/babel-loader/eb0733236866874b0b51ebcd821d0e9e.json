{"ast":null,"code":"// 该文件专门用于创建整个应用的路由器\nimport VueRouter from 'vue-router'; // 引入组件\n\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport News from '../pages/News';\nimport Message from '../pages/Message';\nimport Detail from '../pages/Detail'; // 创建并暴露一个路由器\n\nconst router = new VueRouter({\n  mode: 'history',\n  routes: [{\n    name: 'guanyu',\n    path: '/about',\n    component: About,\n    meta: {\n      isAuth: true,\n      title: '关于'\n    }\n  }, {\n    name: 'zhuye',\n    path: '/home',\n    component: Home,\n    meta: {\n      title: '主页'\n    },\n    children: [{\n      name: 'xinwen',\n      path: 'news',\n      component: News,\n      meta: {\n        isAuth: true,\n        title: '新闻'\n      }\n      /* beforeEnter: (to, from, next) => {\r\n        console.log('前置路由守卫', to, from)\r\n        if (to.meta.isAuth) { // 判断是否需要鉴权\r\n          if (localStorage.getItem('school') === 'atguigu') {\r\n            next()\r\n          } else {\r\n            alert('学校名不对，无权限查看！')\r\n          }\r\n        } else {\r\n          next()\r\n        }\r\n      }, */\n\n    }, {\n      name: 'xiaoxi',\n      path: 'message',\n      component: Message,\n      meta: {\n        isAuth: true,\n        title: '消息'\n      },\n      children: [{\n        name: 'xiangqing',\n        path: 'detail',\n        component: Detail,\n        meta: {\n          isAuth: true,\n          title: '详情'\n        },\n\n        // props 的第一种写法，值为对象，该对象中的所有 key-value 都会以 props 的形式传给 Detail 组件\n        // props: { a: 1, b: 'hello' }\n        // props 的第一种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有 params 参数，以 props 的形式传给 Detail 组件\n        // props: true\n        // props 的第一种写法，值为函数，\n        props($route) {\n          return {\n            id: $route.query.id,\n            title: $route.query.title\n          };\n        }\n\n      }]\n    }]\n  }]\n}); // 全局后置路由守卫————初始化的时候被调用、每次路由切换之后被调用\n\n/* router.afterEach((to, from) => {\r\n  console.log('后置路由守卫', to, from)\r\n  document.title = to.meta.title || '硅谷系统'\r\n}) */\n\nexport default router;","map":{"version":3,"names":["VueRouter","About","Home","News","Message","Detail","router","mode","routes","name","path","component","meta","isAuth","title","children","props","$route","id","query"],"sources":["C:/Users/Sasha/Desktop/DailyLearningCode/Vue2-核心-依赖脚手架/src/router/index.js"],"sourcesContent":["// 该文件专门用于创建整个应用的路由器\r\nimport VueRouter from 'vue-router'\r\n\r\n// 引入组件\r\nimport About from '../pages/About'\r\nimport Home from '../pages/Home'\r\nimport News from '../pages/News'\r\nimport Message from '../pages/Message'\r\nimport Detail from '../pages/Detail'\r\n\r\n// 创建并暴露一个路由器\r\nconst router = new VueRouter({\r\n  mode: 'history',\r\n  routes: [\r\n    {\r\n      name: 'guanyu',\r\n      path: '/about',\r\n      component: About,\r\n      meta: { isAuth: true, title: '关于' }\r\n    },\r\n    {\r\n      name: 'zhuye',\r\n      path: '/home',\r\n      component: Home,\r\n      meta: { title: '主页' },\r\n      children: [\r\n        {\r\n          name: 'xinwen',\r\n          path: 'news',\r\n          component: News,\r\n          meta: { isAuth: true, title: '新闻' },\r\n          /* beforeEnter: (to, from, next) => {\r\n            console.log('前置路由守卫', to, from)\r\n            if (to.meta.isAuth) { // 判断是否需要鉴权\r\n              if (localStorage.getItem('school') === 'atguigu') {\r\n                next()\r\n              } else {\r\n                alert('学校名不对，无权限查看！')\r\n              }\r\n            } else {\r\n              next()\r\n            }\r\n          }, */\r\n        },\r\n        {\r\n          name: 'xiaoxi',\r\n          path: 'message',\r\n          component: Message,\r\n          meta: { isAuth: true, title: '消息' },\r\n          children: [\r\n            {\r\n              name: 'xiangqing',\r\n              path: 'detail',\r\n              component: Detail,\r\n              meta: { isAuth: true, title: '详情' },\r\n\r\n              // props 的第一种写法，值为对象，该对象中的所有 key-value 都会以 props 的形式传给 Detail 组件\r\n              // props: { a: 1, b: 'hello' }\r\n\r\n              // props 的第一种写法，值为布尔值，若布尔值为真，就会把该路由组件收到的所有 params 参数，以 props 的形式传给 Detail 组件\r\n              // props: true\r\n\r\n              // props 的第一种写法，值为函数，\r\n              props($route) {\r\n                return { id: $route.query.id, title: $route.query.title }\r\n              }\r\n            }\r\n          ]\r\n        },\r\n      ]\r\n    },\r\n  ]\r\n})\r\n\r\n// 全局后置路由守卫————初始化的时候被调用、每次路由切换之后被调用\r\n/* router.afterEach((to, from) => {\r\n  console.log('后置路由守卫', to, from)\r\n  document.title = to.meta.title || '硅谷系统'\r\n}) */\r\n\r\nexport default router"],"mappings":"AAAA;AACA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAc;EAC3BO,IAAI,EAAE,SADqB;EAE3BC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,QADR;IAEEC,IAAI,EAAE,QAFR;IAGEC,SAAS,EAAEV,KAHb;IAIEW,IAAI,EAAE;MAAEC,MAAM,EAAE,IAAV;MAAgBC,KAAK,EAAE;IAAvB;EAJR,CADM,EAON;IACEL,IAAI,EAAE,OADR;IAEEC,IAAI,EAAE,OAFR;IAGEC,SAAS,EAAET,IAHb;IAIEU,IAAI,EAAE;MAAEE,KAAK,EAAE;IAAT,CAJR;IAKEC,QAAQ,EAAE,CACR;MACEN,IAAI,EAAE,QADR;MAEEC,IAAI,EAAE,MAFR;MAGEC,SAAS,EAAER,IAHb;MAIES,IAAI,EAAE;QAAEC,MAAM,EAAE,IAAV;QAAgBC,KAAK,EAAE;MAAvB;MACN;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAhBQ,CADQ,EAmBR;MACEL,IAAI,EAAE,QADR;MAEEC,IAAI,EAAE,SAFR;MAGEC,SAAS,EAAEP,OAHb;MAIEQ,IAAI,EAAE;QAAEC,MAAM,EAAE,IAAV;QAAgBC,KAAK,EAAE;MAAvB,CAJR;MAKEC,QAAQ,EAAE,CACR;QACEN,IAAI,EAAE,WADR;QAEEC,IAAI,EAAE,QAFR;QAGEC,SAAS,EAAEN,MAHb;QAIEO,IAAI,EAAE;UAAEC,MAAM,EAAE,IAAV;UAAgBC,KAAK,EAAE;QAAvB,CAJR;;QAME;QACA;QAEA;QACA;QAEA;QACAE,KAAK,CAACC,MAAD,EAAS;UACZ,OAAO;YAAEC,EAAE,EAAED,MAAM,CAACE,KAAP,CAAaD,EAAnB;YAAuBJ,KAAK,EAAEG,MAAM,CAACE,KAAP,CAAaL;UAA3C,CAAP;QACD;;MAfH,CADQ;IALZ,CAnBQ;EALZ,CAPM;AAFmB,CAAd,CAAf,C,CA+DA;;AACA;AACA;AACA;AACA;;AAEA,eAAeR,MAAf"},"metadata":{},"sourceType":"module"}